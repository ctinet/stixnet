using Cti.Stix.Types;
using MongoDB.Bson.Serialization.Attributes;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;

namespace Cti.Stix.Core.SDO
{
    /// <summary>
    /// A Vulnerability is a weakness or defect in the requirements, designs, or implementations of the computational logic (e.g., code) found in 
    /// software and some hardware components (e.g., firmware) that can be directly exploited to negatively impact the confidentiality, integrity, 
    /// or availability of that system.
    /// 
    /// CVE is a list of information security vulnerabilities and exposures that provides common names for publicly known problems [CVE]. 
    /// For example, if a piece of malware exploits CVE-2015-12345, a Malware object could be linked to a Vulnerability object that references CVE-2015-12345.
    /// 
    /// The Vulnerability SDO is primarily used to link to external definitions of vulnerabilities or to describe 0-day vulnerabilities that do not 
    /// yet have an external definition. Typically, other SDOs assert relationships to Vulnerability objects when a specific vulnerability is targeted 
    /// and exploited as part of malicious cyber activity. As such, Vulnerability objects can be used as a linkage to the asset management and compliance process.
    /// </summary>
    public class Vulnerability : SdoStix
    {
        public Vulnerability(string objectType = "vulnerability")
        {
            ObjectType = objectType;
        }

        /// <summary>
        /// A name used to identify the Vulnerability.
        /// </summary>
        [Required]
        [JsonRequired]
        [BsonRequired]
        [JsonProperty("name")]
        [BsonElement("name")]
        public string Name { get; set; }

        /// <summary>
        /// A description that provides more details and context about the Vulnerability, potentially including its purpose and its key characteristics.
        /// </summary>
        [JsonProperty("description")]
        [BsonElement("description")]
        public string? Description { get; set; }

        /// <summary>
        /// A list of external references which refer to non-STIX information. This property MAY be used to provide one or more Vulnerability identifiers, 
        /// such as a CVE ID [CVE]. When specifying a CVE ID, the source_name property of the external reference MUST be set to cve and the external_id 
        /// property MUST be the exact CVE identifier.
        /// </summary>
        [JsonProperty("external_references")]
        [BsonElement("external_references")]
        public override List<ExternalReference>? ExternalReferences { get; set; }


        /*
         
         Embedded Relationships

created_by_ref

identifier (of type identity)

object_marking_refs

list of type identifier (of type marking-definition)

Common Relationships

duplicate-of, derived-from, related-to

Source

Relationship Type

Target

Description

—

—

—

—

Reverse Relationships

attack-pattern, campaign, intrusion-set, malware, threat-actor, tool

targets

vulnerability

See forward relationship for definition.

malware

exploits

vulnerability

See forward relationship for definition.

course-of-action

mitigates, remediates

 

vulnerability

See forward relationship for definition.

infrastructure

has

vulnerability

See forward relationship for definition.
         
         */


    }
}
