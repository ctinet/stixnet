using MongoDB.Bson.Serialization.Attributes;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;

namespace Cti.Stix.Core.SDO
{

    /// <summary>
    /// Malware Analysis captures the metadata and results of a particular static or dynamic analysis performed on a malware instance or family. 
    /// One of result or analysis_sco_refs properties MUST be provided.
    /// </summary>
    public class MalwareAnalysis : SdoStix
    {
        public MalwareAnalysis(string objectType = "malware-analysis") { ObjectType = objectType; }

        /// <summary>
        /// The name of the analysis engine or product that was used. Product names SHOULD be all lowercase with words separated by a dash "-".
        /// For cases where the name of a product cannot be specified, a value of "anonymized" MUST be used.
        /// </summary>
        [Required]
        [JsonRequired]
        [BsonRequired]
        [JsonProperty("product")]
        [BsonElement("product")]
        public string Product { get; set; }

        /// <summary>
        /// The version of the analysis product that was used to perform the analysis.
        /// </summary>
        [JsonProperty("version")]
        [BsonElement("version")]
        public string? Version { get; set; }

        /// <summary>
        /// A description of the virtual machine environment used to host the guest operating system (if applicable) that was used for the dynamic 
        /// analysis of the malware instance or family.
        /// 
        /// If this value is not included in conjunction with the operating_system_ref property, this means that the dynamic analysis may have been 
        /// performed on bare metal (i.e. without virtualization) or the information was redacted.
        /// 
        /// The value of this property MUST be the identifier for a SCO software object.
        /// </summary>
        [JsonProperty("host_vm_ref")]
        [BsonElement("host_vm_ref")]
        public string? HostVmRef { get; set; }

        /// <summary>
        /// The operating system used for the dynamic analysis of the malware instance or family. This applies to virtualized operating systems as 
        /// well as those running on bare metal.
        /// 
        /// The value of this property MUST be the identifier for a SCO software object.
        /// </summary>
        [JsonProperty("operating_system_ref")]
        [BsonElement("operating_system_ref")]
        public string? OperatingSystemRef { get; set; }

        /// <summary>
        /// Any non-standard software installed on the operating system (specified through the operating-system value) used for the dynamic analysis 
        /// of the malware instance or family.
        /// 
        /// The value of this property MUST be the identifier for a SCO software object.
        /// </summary>
        [JsonProperty("installed_software_refs")]
        [BsonElement("installed_software_refs")]
        public List<string>? InstalledSoftwareRefs { get; set; }

        /// <summary>
        /// The named configuration of additional product configuration parameters for this analysis run.
        /// 
        /// For example, when a product is configured to do full depth analysis of Window™ PE files. This configuration may have a named version and 
        /// that named version can be captured in this property. This will ensure additional runs can be configured in the same way.
        /// </summary>
        [JsonProperty("configuration_version")]
        [BsonElement("configuration_version")]
        public string? ConfigurationVersion { get; set; }

        /// <summary>
        /// The specific analysis modules that were used and configured in the product during this analysis run. 
        /// For example, configuring a product to support analysis of Dridex.
        /// </summary>
        [JsonProperty("modules")]
        [BsonElement("modules")]
        public List<string>? Modules { get; set; }

        /// <summary>
        /// The version of the analysis engine or product (including AV engines) that was used to perform the analysis.
        /// </summary>
        [JsonProperty("analysis_engine_version")]
        [BsonElement("analysis_engine_version")]
        public string? AnalysisEngineVersion { get; set; }

        /// <summary>
        /// The version of the analysis definitions used by the analysis tool (including AV tools).
        /// </summary>
        [JsonProperty("analysis_definition_version")]
        [BsonElement("analysis_definition_version")]
        public string? AnalysisDefinitionVersion { get; set; }

        /// <summary>
        /// The date and time that the malware was first submitted for scanning or analysis. This value will stay constant while the scanned date can change. 
        /// For example, when Malware was submitted to a virus analysis tool.
        /// </summary>
        [JsonProperty("submitted")]
        [BsonElement("submitted")]
        public DateTime? Submitted { get; set; }

        /// <summary>
        /// The date and time that the malware analysis was initiated.
        /// </summary>
        [JsonProperty("analysis_started")]
        [BsonElement("analysis_started")]
        public DateTime? AnalysisStarted { get; set; }

        /// <summary>
        /// The date and time that the malware analysis ended.
        /// </summary>
        [JsonProperty("analysis_ended")]
        [BsonElement("analysis_ended")]
        public DateTime? AnalysisEnded { get; set; }

        /// <summary>
        /// The classification result or name assigned to the malware instance by the scanner tool.
        /// </summary>
        [JsonProperty("result_name")]
        [BsonElement("result_name")]
        public string? ResultName { get; set; }

        /// <summary>
        /// The classification result as determined by the scanner or tool analysis process.
        /// 
        /// The value for this property SHOULD come from the malware-result-ov open vocabulary.
        /// </summary>
        [JsonProperty("result")]
        [BsonElement("result")]
        public string? Result { get; set; }

        /// <summary>
        /// This property contains the references to the STIX Cyber-observable Objects that were captured during the analysis process.
        /// </summary>
        [JsonProperty("analysis_sco_refs")]
        [BsonElement("analysis_sco_refs")]
        public List<string>? AnalysisScoRefs { get; set; }

        /// <summary>
        /// This property contains the reference to the SCO file, network traffic or artifact object that this malware analysis was performed against.
        /// 
        /// Caution should be observed when creating an SRO between Malware and Malware Analysis objects when the Malware sample_refs property does not 
        /// contain the SCO that is included in the Malware Analysis sample_ref property.
        /// 
        /// Note, this property can also contain a reference to an SCO which is not associated with Malware (i.e., some SCO which was scanned and found to be benign.)
        /// </summary>
        [JsonProperty("sample_ref")]
        [BsonElement("sample_ref")]
        public string? SampleRef { get; set; }

        /*
         
         Embedded Relationships

created_by_ref

identifier (of type identity)

object_markings_refs

list of type identifier (of type marking-definition)

host_vm_ref

identifier (of type software)

operating_system_ref

identifier (of type software)

installed_software_refs

list of type identifier (of type software)

analysis_sco_refs

list of type identifier (of type STIX Object)

sample_ref

identifier (of type file, network-traffic, and artifact)

Common Relationships

duplicate-of, derived-from, related-to

Source

Name

Target

Description

malware-analysis

characterizes

malware

This Relationship describes that the malware analysis describes the related malware.

malware-analysis

analysis-of

malware

This Relationship describes that the malware analysis is results for the related malware.

malware-analysis

static-analysis-of

malware

This Relationship describes that the malware analysis is static analysis results for the related malware.

malware-analysis

dynamic-analysis-of

malware

This Relationship describes that the malware analysis is dynamic analysis results for the related malware.
         
         */

    }
}
