using Cti.Stix.Types;
using MongoDB.Bson.Serialization.Attributes;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;

namespace Cti.Stix.Core.SDO
{
    /// <summary>
    /// Malware is a type of TTP that represents malicious code. It generally refers to a program that is inserted into a 
    /// system, usually covertly. The intent is to compromise the confidentiality, integrity, or availability of the victim's 
    /// data, applications, or operating system (OS) or otherwise annoy or disrupt the victim.
    /// </summary>
    public class Malware : SdoStix
    {
        public Malware(string objectType = "malware") { ObjectType = objectType; }

        /// <summary>
        /// A name used to identify the malware instance or family, as specified by the producer of the SDO. For a malware family the name MUST 
        /// be defined. If a name for a malware instance is not available, the SHA-256 hash value or sample’s filename MAY be used instead.
        /// </summary>
        [JsonProperty("name")]
        [BsonElement("name")]
        public string? Name { get; set; }

        /// <summary>
        /// A description that provides more details and context about the malware instance or family, potentially including its purpose and its key characteristics.
        /// </summary>
        [JsonProperty("description")]
        [BsonElement("description")]
        public string? Description { get; set; }

        /// <summary>
        /// A set of categorizations for the malware being described.
        /// </summary>
        [JsonProperty("malware_types")]
        [BsonElement("malware_types")]
        public List<string>? MalwareTypes { get; set; }

        /// <summary>
        /// Whether the object represents a malware family (if true) or a malware instance (if false).
        /// </summary>
        [Required]
        [JsonRequired]
        [BsonRequired]
        [JsonProperty("is_family")]
        [BsonElement("is_family")]
        public bool IsFamily { get; set; }

        /// <summary>
        /// Alternative names used to identify this malware or malware family.
        /// </summary>
        [JsonProperty("aliases")]
        [BsonElement("aliases")]
        public List<string>? Aliases { get; set; }

        /// <summary>
        /// The list of Kill Chain Phases for which this malware can be used.
        /// </summary>
        [JsonProperty("kill_chain_phases")]
        [BsonElement("kill_chain_phases")]
        public List<KillChainPhase>? KillChainPhases { get; set; }

        /// <summary>
        /// The time that the malware instance or family was first seen.
        /// This property is a summary property of data from sightings and other data that may or may not be available in STIX. 
        /// If new sightings are received that are earlier than the first seen timestamp, the object may be updated to account for the new data.
        /// </summary>
        [JsonProperty("first_seen")]
        [BsonElement("first_seen")]
        public DateTime? FirstSeen { get; set; }

        /// <summary>
        /// The time that the malware family or malware instance was last seen.
        /// This property is a summary property of data from sightings and other data that may or may not be available in STIX. If new sightings 
        /// are received that are later than the last_seen timestamp, the object may be updated to account for the new data.
        /// If this property and the first_seen property are both defined, then this property MUST be greater than or equal to the timestamp in the first_seen property.
        /// </summary>
        [JsonProperty("last_seen")]
        [BsonElement("last_seen")]
        public DateTime? LastSeen { get; set; }

        /// <summary>
        /// The operating systems that the malware family or malware instance is executable on. This applies to virtualized operating systems as 
        /// well as those running on bare metal.
        /// </summary>
        [JsonProperty("operating_system_refs")]
        [BsonElement("operating_system_refs")]
        public List<string>? OperatingSystemRefs { get; set; }

        /// <summary>
        /// The processor architectures (e.g., x86, ARM, etc.) that the malware instance or family is executable on.
        /// The values for this property SHOULD come from the processor-architecture-ov open vocabulary.
        /// </summary>
        [JsonProperty("architecture_execution_envs")]
        [BsonElement("architecture_execution_envs")]
        public List<string>? ArchitectureExecutionEnvs { get; set; }

        /// <summary>
        /// The programming language(s) used to implement the malware instance or family.
        /// The values for this property SHOULD come from the implementation-language-ov open vocabulary.
        /// </summary>
        [JsonProperty("implementation_languages")]
        [BsonElement("implementation_languages")]
        public List<string>? ImplementationLanguages { get; set; }

        /// <summary>
        /// Any of the capabilities identified for the malware instance or family.
        /// The values for this property SHOULD come from the malware-capabilities-ov open vocabulary.
        /// </summary>
        [JsonProperty("capabilities")]
        [BsonElement("capabilities")]
        public List<string>? Capabilities { get; set; }

        /// <summary>
        /// The sample_refs property specifies a list of identifiers of the SCO file or artifact objects associated with this malware instance(s) or family.
        /// If is_family is false, then all samples listed in sample_refs MUST refer to the same binary data.
        /// </summary>
        [JsonProperty("sample_refs")]
        [BsonElement("sample_refs")]
        public List<string>? SampleRefs { get; set; }


        /*
         Embedded Relationships

created_by_ref

identifier (of type identity)

object_marking_refs

list of type identifier (of type marking-definition)

sample_refs

list of type identifier (of type file or artifact)

Common Relationships

duplicate-of, derived-from, related-to

Source

Relationship Type

Target

Description

malware

authored-by

threat-actor, intrusion-set

This Relationship describes that the malware instance or family was developed by the related threat actor or intrusion set.

malware

beacons-to, exfiltrates-to

infrastructure

This Relationship describes that the malware instance or family beacons to or exfiltrates data to the related Infrastructure.

malware

communicates-with

ipv4-addr, ipv6-addr, domain-name, url

This Relationship documents that this malware instance (or family) communicates with (beacons to, connects to, or exfiltrated data to) the defined network addressable resource.

malware

controls

malware

This Relationship documents that this malware instance (or family) can control other malware which may be resident on the same system on which it is executing.

 

Note that this is not meant to imply or state that the malware instance or family drops other malware (which is covered by the drops relationship). Rather, it is meant to state that the malware instance or family is able to subvert or control other malware to achieve its goals.

malware

downloads, drops

malware, tool, file

These Relationships document that this malware instance (or family) downloads or drops another malware instance, tool or file. This is especially common with "first-stage" malware instances such as downloaders and droppers.

malware

exploits

vulnerability

This Relationship documents that this malware instance or family exploits or attempts to exploit a particular vulnerability.

 

For example, an exploits Relationship linking a malware instance or family representing a downloader to a Vulnerability for CVE-2016-0001 means that the malware instance or family exploits that vulnerability.

malware

originates-from

location

This Relationship documents that this malware instance or family originates from a particular location.

malware

targets

identity, infrastructure,

location, vulnerability

This Relationship documents that a malware instance or family is being used to target an Identity, Infrastructure, or Location. For malware families, this can be used to capture the full set of identities, infrastructures, or locations targeted by the family.

 

Similarly, a targets Relationship linking a malware instance or family representing a downloader to an Identity representing the energy sector means that downloader is typically used against targets in the energy sector.

malware

uses

attack-pattern, infrastructure, malware, tool

This Relationship documents that this malware instance or family uses the attack pattern, infrastructure, malware, or tool to achieve its objectives.

 

For example, a uses Relationship from the jay-sm17h Threat Actor to the xInject Malware indicates that xInject is often used by jay-sm17h.

malware

variant-of

malware

This Relationship is used to document that one malware instance or family is a variant of another malware instance or family.

 

Only the following uses of this relationship are valid:

 

Malware instance → Malware family: a Malware instance is a variant of a Malware family. For example, a particular Zeus version 2 sample is a variant of the broader Zeus family.

 

Malware family → Malware family: a Malware family is a variant of another Malware family. For example, the Gameover Zeus family is a variant of the broader Zeus family.

 

Malware instance → Malware instance: a Malware instance is a variant of another Malware instance. For example, a particular Cryptolocker instance that is based on an another Cryptolocker instance with minor changes.

 

Malware family → Malware instance: this relationship MUST NOT be used as it is not semantically valid.

Reverse Relationships

attack-pattern, infrastructure, tool

delivers

malware

See forward relationship for definition.

indicator

indicates

malware

See forward relationship for definition.

course-of-action

mitigates, remediates

malware

See forward relationship for definition.

attack-pattern, campaign, intrusion-set, threat-actor

uses

malware

See forward relationship for definition.

tool

drops

malware

See forward relationship for definition.

infrastructure

controls

malware

See forward relationship for definition.

malware-analysis

characterizes,

av-analysis-of,

static-analysis-of,

dynamic-analysis-of

 

malware

See forward relationship for definition.
         
         
         */
    }
}
